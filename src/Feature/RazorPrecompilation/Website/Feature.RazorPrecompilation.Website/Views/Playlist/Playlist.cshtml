@using Sitecore.Data.Items
@using Sitecore.XA.Foundation.MarkupDecorator.Extensions
@using Sitecore.XA.Foundation.RenderingVariants.Extensions
@using Sitecore.XA.Foundation.RenderingVariants.Fields
@using Sitecore.XA.Foundation.SitecoreExtensions.Extensions
@using Sitecore.XA.Foundation.Variants.Abstractions.Fields
@model Sitecore.XA.Feature.Media.Models.PlaylistRenderingModel

<div @Html.Sxa().Component(Model.Rendering.RenderingCssClass ?? "playlist", Model.Attributes) data-properties='@Html.Raw(Model.JsonDataProperties)' >
    <div class="component-content">
        @if(Model.DataSourceItem != null)
        {
            @Html.Sxa().RenderHeading(Model.HeadingTag, Model.DataSourceItem, "Title", Model.GetRenderingWebEditingParams())
        }
        @if (Model.DataSourceItem == null && Html.Sxa().IsEdit)
        {
            @Model.MessageIsEmpty
        }
        @if (Model.DataSourceItem != null && !Model.Items.Any())
        {
            using (Html.Sxa().BeginEditFrame(Html.Sitecore().CurrentRendering.DataSource, "Playlist Empty", Model.IsControlEditable))
            {
            @Model.MessageIsEmpty
            }
        }

        @if (Model.DataSourceItem != null && Model.Items.Any())
        {
            <ul class="playlist-items">
                @foreach (Item item in Model.Items)
                {         
                    <li class="playlist-item">
                        @using (Html.Sxa().BeginEditFrame(item.Paths.Path, "Playlist Video", Model.IsControlEditable))
                       {
                            <section class="playlist-section">
                                @foreach (BaseVariantField variantField in Model.VariantFields)
                               {
                                    @Html.RenderingVariants().RenderVariant(variantField, item, Model.RenderingWebEditingParams, Model)
                               }
                            </section>
                       }
                    </li>
  
                }
            </ul>
        }

      @if(Model.NavigationVisible)
       {
            <div class="playlist-nav">
                <div class="playlist-prev"><a title="prev" href="#">Prev</a></div>
                <div class="playlist-next"><a title="next" href="#">Next</a></div>
            </div>
        }
    </div>
</div>
