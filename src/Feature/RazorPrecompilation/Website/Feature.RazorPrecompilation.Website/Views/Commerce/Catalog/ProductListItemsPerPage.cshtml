
@using Sitecore.XA.Foundation.MarkupDecorator.Extensions
@using Sitecore.XA.Foundation.SitecoreExtensions.Extensions

@model Sitecore.Commerce.XA.Feature.Catalog.Models.ProductListItemsPerPageRenderingModel

<div @Html.Sxa().Component("cxa-productlistitemsperpage-component", Model.Attributes)>
    @if (!String.IsNullOrWhiteSpace(Model.ErrorMessage))
    {
        <div class="error-message">
            @Model.ErrorMessage
        </div>
    }
    else
    {
        if (Model != null && Model.Pagination != null && Model.Pagination.TotalResultCount > 0)
        {
        <div class="component-content">
            <div class="productlist-header-section">
                <div class="results-container">
                    <span>@Html.Sitecore().Field("Results per Page", Html.Sitecore().CurrentItem)</span>
                    <select class="change-pagesize">
                        @{
                            var pageSizesString = Model.ResultsPerPageValues;

                            if (!string.IsNullOrEmpty(pageSizesString))
                            {
                                int pageSize;
                                var pageSizes = pageSizesString.Split('|');
                                foreach (var size in pageSizes)
                                {
                                    if (int.TryParse(size, out pageSize))
                                    {
                                        <option value="@pageSize" @if (Model.Pagination.PageResultCount == pageSize)
                                        { <text> selected </text>         }>@pageSize</option>
                                    }
                                }
                            }
                        }
                    </select>
                </div>
            </div>
        </div>
        }
    }
</div>