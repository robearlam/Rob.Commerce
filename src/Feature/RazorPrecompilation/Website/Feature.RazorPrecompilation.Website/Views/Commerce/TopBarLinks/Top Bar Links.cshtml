@*//-----------------------------------------------------------------------
    // Copyright 2017 Sitecore Corporation A/S
    // Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
    // except in compliance with the License. You may obtain a copy of the License at
    //       http://www.apache.org/licenses/LICENSE-2.0
    //
    // Unless required by applicable law or agreed to in writing, software distributed under the
    // License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    // either express or implied. See the License for the specific language governing permissions
    // and limitations under the License.
    // -------------------------------------------------------------------------------------------*@
@using Sitecore.Commerce.XA.Foundation.Common
@using Sitecore.Commerce.XA.Foundation.Common.Models
@using Sitecore.Commerce.XA.Foundation.Common.Utils
@using Sitecore.Data.Items
@using Sitecore.Data.Fields
@using Sitecore.Mvc
@using Sitecore.XA.Foundation.MarkupDecorator.Extensions
@using Sitecore.XA.Foundation.SitecoreExtensions.Extensions


@model Sitecore.Commerce.XA.Feature.TopBarLinks.Models.TopBarLinksRenderingModel

@{
    var links = Model.Links;
}
<div @Html.Sxa().Component("cxa-topbarlinks-component", Model.Attributes)>
    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
    {
        <div>@Model.ErrorMessage</div>
    }
    else
    {
        <div class="component-content">
            <ul>
                @{
                    bool displayPipe = false;

                    if (Request.IsAuthenticated)
                    {
                        <li>
                            <a class="username-text" href="@Model.EditProfileLink">@Sitecore.Context.User.LocalName</a>
                        </li>

                        displayPipe = true;
                    }
                    
                        foreach (KeyValuePair<string, Item> link in links)
                        {
                          
                        Item linkItem = link.Value;

                        CheckboxField showWhenAuthenticated = linkItem.Fields["Show when Authenticated"];
                        CheckboxField showAlways = linkItem.Fields["Show Always"];
                        CheckboxField generateSecureLink = linkItem.Fields["Generate Secure Link"];
                            LinkField linkRef = linkItem.Fields["Link"];
                        
                        string tooltipString = linkItem["Tooltip"];

                        bool show = (showAlways.Checked) || (showWhenAuthenticated.Checked && Request.IsAuthenticated) || (!showWhenAuthenticated.Checked && !Request.IsAuthenticated);

                        if (show)
                        {
                            if (displayPipe)
                            {
                                <li class="quick-link-seperator"> | </li>
                            }
                            else
                            {
                                displayPipe = true;
                            }

                            string anchorUrl = link.Key;

                            <li>
                                @if (string.IsNullOrWhiteSpace(anchorUrl))
                                {
                                    <span  title="@tooltipString">@Html.Sitecore().Field("Text", linkItem)</span>
                                }
                                else
                                {
                                    if (generateSecureLink.Checked)
                                    {
                                        <a class="topbar-link" href="@anchorUrl" title="@tooltipString">@Html.Sitecore().Field("Text", linkItem)</a>
                                    }
                                    else
                                    {
                                        <a href="@anchorUrl" title="@tooltipString">@Html.Sitecore().Field("Text", linkItem)</a>
                                    }
                                }
                            </li>
                        }
                    }
                }
            </ul>
        </div>
            }
</div>
