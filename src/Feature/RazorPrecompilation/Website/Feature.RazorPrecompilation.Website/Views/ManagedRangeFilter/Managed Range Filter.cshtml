@using Sitecore.XA.Feature.Search
@using Sitecore.XA.Feature.Search.Models.FacetManagedRange
@using Sitecore.XA.Foundation.MarkupDecorator.Extensions
@using Sitecore.XA.Foundation.SitecoreExtensions.Extensions

@model ManagedRangeSelectorRenderingModel

@if (Model.IsEdit || Model.FacetItemName != null)
{
<div @Html.Sxa().Component(Model.Rendering.RenderingCssClass ?? "facet-managed-range", Model.Attributes).Decorate("class", "facet-component") data-properties='@Model.JsonDataProperties'>
    <div class="component-content">

        @if (Model.DataSourceItem == null)
        {
            @Model.MessageIsEmpty
        }
        else if (Model.FacetItemName == null)
        {
            @Model.MessageFacetIsEmpty
        }
        else
        {
            { Html.RenderPartial("FacetHeader", Model); }
            if (Model.ManagedRange)
            {
                foreach (ManagedRangeItem item in Model.ManagedRangeItems)
                {
            <div>
                @if (Model.IsManagedRangeMode)
                {

                    <input type="checkbox" id="@item.Id" data-minValue="@item.InnerItem[Templates.ManagedRangeItem.Fields.MinValue]" data-maxValue="@item.InnerItem[Templates.ManagedRangeItem.Fields.MaxValue]" class="facetCheckbox"/>
                    <a class="faceLink"  data-minValue="@item.InnerItem[Templates.ManagedRangeItem.Fields.MinValue]" data-maxValue="@item.InnerItem[Templates.ManagedRangeItem.Fields.MaxValue]">
                        @item.Title
                    </a>
                }
                else
                {
                    <input type="radio" id="@item.Id" name="@item.Id" value="@String.Format("{0} - {1}", item.InnerItem[Templates.ManagedRangeItem.Fields.MinValue], item.InnerItem[Templates.ManagedRangeItem.Fields.MaxValue])" data-minValue="@item.InnerItem[Templates.ManagedRangeItem.Fields.MinValue]" data-maxValue="@item.InnerItem[Templates.ManagedRangeItem.Fields.MaxValue]" class="facetRadio"/>
                    <label for="@item.Id">@item.Title</label>
                }
            </div>
                }
            }

            if (Model.ManualRange)
            {
            <div class="min-range-value">
                <input type="text" placeholder="@Model.FromLabel" value="@Model.SelectedMinValue" data-defaultvalue="@Model.SelectedMinValue" class="manualRangeMin" />
            </div>
            <div class="max-range-value">
                <input type="text" placeholder="@Model.ToLabel" value="@Model.SelectedMaxValue" data-defaultvalue="@Model.SelectedMaxValue" class="manualRangeMax" />
            </div>            
            }

            { Html.RenderPartial("FacetRemoveFilterButton", Model); }
            if (!String.IsNullOrWhiteSpace(Model.FilterButtonLabel))
            {
            <div class="bottom-filter-button">
                <input type="button" class="filterButton" value="@Model.FilterButtonLabel" />
            </div>
            }
        }
    </div>
</div>
}







