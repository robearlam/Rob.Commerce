@using Sitecore.XA.Feature.Search
@using Sitecore.XA.Foundation.MarkupDecorator.Extensions
@using Sitecore.XA.Foundation.SitecoreExtensions.Extensions

@model Sitecore.XA.Feature.Search.Models.SortResultsRenderingModel

<div @Html.Sxa().Component(Model.Rendering.RenderingCssClass ?? "sort-results", Model.Attributes) data-properties='@Model.JsonDataProperties'>
    <div class="component-content">

        @if (Model.DataSourceItem == null)
        {
            @Model.MessageIsEmpty
        }
        else
        {
            if (Model.IsGrouped)
            {
            <div class="facet-title">
                @Html.Sxa().Field(Templates.SortingGroups.Fields.Title, Model.DataSourceItem, true)
            </div>
            <ul class="sort-results-groups" id="gruppedSortingList">
                @foreach (var item in Model.GruppedSortingList)
                {
                    <li data-facet="@item.Key">
                        <div>@item.Key</div>
                        <ul class="sort-results-group">
                            @foreach (var sortOption in item.Value)
                            {
                                <li data-facet="@sortOption.Facet" data-direction="@(sortOption.Direction.HasValue ? sortOption.Direction.Value.ToString() : string.Empty)">
                                    <a>
                                        @Html.Sxa().Field(Templates.SortingGroups.Fields.Title, sortOption.Item, true)

                                    </a>
                                </li>
                            }
                        </ul>
                    </li>
                }
            </ul>
            }
            else
            {
            <div class="facet-title">
                <label for="flatSortingList">
                    @Html.Sxa().Field("Title", Model.DataSourceItem, true)
                </label>
            </div>
            <select id="flatSortingList">
                @foreach (var sortItem in Model.SortingList)
                {
                    <option value="@sortItem.Title" data-facet="@sortItem.Facet" data-direction="@(sortItem.Direction.HasValue ? sortItem.Direction.Value.ToString() : string.Empty)">
                        @sortItem.Title
                    </option>
                }
            </select>
            }
        }
    </div>
</div>
