@using Sitecore.XA.Foundation.Theming.Bundler
@model Sitecore.Mvc.Presentation.RenderingModel

@{
    AssetLinks assetLinks = AssetLinksGenerator.GenerateLinks(new ThemesProvider());
}

@if (@Sitecore.Context.PageMode.IsNormal || @Sitecore.Context.PageMode.IsPreview)
{
    Response.ContentType = "application/json";
    @Html.Sitecore().Placeholder("json")
}
else
{
    @:<!DOCTYPE html>
    <!--[if lt IE 7]> <html class="no-js lt-ie9 lt-ie8 lt-ie7"> <![endif]-->
    <!--[if IE 7]> <html class="no-js lt-ie9 lt-ie8"> <![endif]-->
    <!--[if IE 8]> <html class="no-js lt-ie9"> <![endif]-->
    <!--[if gt IE 8]><!-->
    <html  class="no-js" lang="@Model.Item.Language.Name">
    <!--<![endif]-->
    <head>
        @{
            var title = string.IsNullOrEmpty(Model.PageItem.DisplayName) ? Model.PageItem.Name : Model.PageItem.DisplayName;
        }
        <title>@title</title>
        @foreach (string style in assetLinks.Styles)
        {
            @Html.Raw(style)
        }
    </head>
    <body>
    <div id="wrapper">
        @Html.Sitecore().Placeholder("json")
    </div>

    @foreach (string script in assetLinks.Scripts)
    {
        @Html.Raw(script)
    }
    </body>
    </html>
}