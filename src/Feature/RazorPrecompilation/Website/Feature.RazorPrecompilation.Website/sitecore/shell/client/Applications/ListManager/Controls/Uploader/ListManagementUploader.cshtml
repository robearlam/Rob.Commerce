@using System.Configuration
@using System.Globalization
@using System.Web.Configuration
@using Sitecore
@using Sitecore.Mvc
@using Sitecore.Mvc.Presentation
@using Sitecore.Web.UI.Controls.Common.UserControls
@model Sitecore.Mvc.Presentation.RenderingModel
@{
    var userControl = Html.Sitecore().Controls().GetUserControl(Model.Rendering);
    var destination = userControl.GetString("DestinationUrl", "destinationUrl");

    userControl.Requires.Script("listmanager", "listmanagementuploader.js");
    userControl.Class = "sc-listmanagementuploader row-fluid";

    var parametersResolver = new DatasourceBasedParametersResolver(Model.Rendering);

    var browseButtonText = userControl.GetString("BrowseButtonText", "browseButtonText");
    if (string.IsNullOrEmpty(browseButtonText))
    {
        browseButtonText = "Browse for media files";
    }

    var shortDescriptionText = userControl.GetString("ShortDescriptionText", "shortDescriptionText");
    if (string.IsNullOrEmpty(shortDescriptionText))
    {
        shortDescriptionText = "Drag and drop files here";
    }

    var orText = userControl.GetString("OrText", "orText");
    if (string.IsNullOrEmpty(orText))
    {
        orText = "or";
    }

    var disableMultipleFilesSelect = userControl.GetBool("DisableMultipleFilesSelect");
    var disableMultipleFilesUpload = userControl.GetBool("DisableMultipleFilesUpload");
    var disableDragAndDrop = userControl.GetBool("DisableDragAndDrop");

    userControl.SetAttribute("data-sc-disablemultiplefilesselect", disableMultipleFilesSelect);
    userControl.SetAttribute("data-sc-disablemultiplefilesupload", disableMultipleFilesUpload);
    userControl.SetAttribute("data-sc-disabledraganddrop", disableDragAndDrop);

    var database = parametersResolver.GetString("Database", "");
    if (!string.IsNullOrEmpty(database))
    {
        if (string.Compare(database, "$context_database", StringComparison.InvariantCultureIgnoreCase) == 0)
        {
            database = Sitecore.Context.Database.Name;
        }
        else if (string.Compare(database, "$context_contentdatabase", StringComparison.InvariantCultureIgnoreCase) == 0)
        {
            database = Sitecore.Context.ContentDatabase.Name;
        }
        userControl.SetAttribute("data-sc-databasename", database);


        var section = ConfigurationManager.GetSection("system.web/httpRuntime") as HttpRuntimeSection;

        if (section != null)
        {
            userControl.SetAttribute("data-sc-maxrequestlength", section.MaxRequestLength * 1024);
            userControl.SetAttribute("data-sc-executiontimeout", section.ExecutionTimeout.TotalSeconds.ToString(CultureInfo.InvariantCulture));
        }
    }
    userControl.SetAttribute("data-sc-destinationurl", destination);

    var controlId = userControl.ControlId;
    var htmlAttributes = userControl.HtmlAttributes;
}
<form @htmlAttributes method="POST" enctype="multipart/form-data">
    @Html.AntiForgeryToken()
    <img class="sc-uploader-preview hide"/>
    <div class="sc-uploader-content">
        @if (!disableDragAndDrop)
        {
            <span class="drag">
                @ClientHost.Globalization.Translate(shortDescriptionText)
                <br/>
                @ClientHost.Globalization.Translate(orText)
                <br/>
            </span>
        }
        <span class="btn sc-button btn-primary" id="browse-button">
            @ClientHost.Globalization.Translate(browseButtonText).TrimStart().TrimEnd()
            @if (disableMultipleFilesSelect)
            {
                <input class="sc-uploader-fileupload" type="file" name="files[]" title="">
            }
            else
            {
                <input class="sc-uploader-fileupload" type="file" name="files[]" title="" multiple>
            }
        </span>

    </div>
</form>