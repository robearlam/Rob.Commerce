@using Sitecore.Configuration
@using Sitecore.Data.Items
@using Sitecore.Links
@using Sitecore.Mvc
@using Sitecore.Resources
@using Sitecore.Web
@using Sitecore.Web.UI
@using Sitecore.Web.UI.Controls.Common.UserControls
@using Sitecore.LaunchPad
@model Sitecore.Mvc.Presentation.RenderingModel
@{
  var rendering = Html.Sitecore().Controls().GetUserControl(Model.Rendering);
  rendering.Class = "sc-launchpad";

  var database = Factory.GetDatabase("core");
  if (database == null)
  {
    return;
  }

  var root = database.GetItem("{C625DB2F-6DB2-4645-B7F7-733ABFC2CAC6}");
  if (root == null)
  {
    return;
  }


  var groups = LaunchPad.GetControlGroups(root);
  var groupItems = LaunchPad.GetGroupItems(root).Where((o, i) => groups[i].Count > 0).ToArray();

  var grids = new List<List<List<Item>>>();
  var groupNumber = 0;

  foreach (var group in groups.Where(g => g.Count > 0))
  {
    var grid = new List<List<Item>>();

    var width = string.IsNullOrEmpty(groupItems[groupNumber]["RowsNumber"]) ? 3 : Int32.Parse(groupItems[groupNumber]["RowsNumber"]);
    groupNumber++;

    for (var y = 0; y <= group.Count / width; y++)
    {
      var row = new List<Item>();


      for (var x = 0; x < width; x++)
      {
        var index = x + y * width;
        if (index >= group.Count)
        {
          break;
        }

        var item = group.ElementAt(index);
        row.Add(item);
      }

      if (row.Count != 0)
      {
        grid.Add(row);
      }
    }

    if (grid.Count == 0)
    {
      grid.Add(new List<Item>());
    }

    grids.Add(grid);
  }

  var externalApp = database.GetItem("{E5AB0B90-D057-43AF-90CC-69B58C9A5CB0}");
  string externalAppLink = null;
  if (externalApp != null)
  {
    externalAppLink = LinkManager.GetItemUrl(externalApp);
  }

  var htmlAttributes = rendering.HtmlAttributes;
}
<div @htmlAttributes>
  @*<div class="row">
    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">*@
      @for (int index = 0; index < grids.Count; index++)
      {
        var grid = grids[index];
        var className = index == 0 ? "first" : index == grids.Count - 1 ? "last" : string.Empty;

        <div class="sc-launchpad-group @className">
          <header class="sc-launchpad-group-title">@groupItems[index]["title"]</header>
          @foreach (var row in grid)
          {
            <div class="sc-launchpad-group-row">
              @foreach (var item in row)
              {
                var icon = Images.GetThemedImageSource(item["Icon"], ImageDimension.id48x48);
                <a href="@(item["OpenIframe"] == "1" ?  Html.Raw(WebUtil.AddQueryString(externalAppLink, "id", item.ID.ToString())) : Html.Raw(Html.Encode(item["Link"])))" class="sc-launchpad-item" @(item["OpenNewTab"] == "1" ? "target=_blank" : "") title="@item["Text"]">
                  <span class="icon">
                    <img src="@icon" width="48" height="48" alt="@item["Text"]" />
                  </span>
                  <span class="sc-launchpad-text">
                    @item["Text"]
                  </span>
                </a>
              }
            </div>
          }
        </div>
      }
  @*  </div>
  </div>*@
</div>
