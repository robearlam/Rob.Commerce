<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sitecore.Commerce.Engine</name>
    </assembly>
    <members>
        <member name="T:Sitecore.Commerce.Engine.Program">
            <summary>
            Defines the program class
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Engine.Program.Main(System.String[])">
            <summary>
            Application entry point.
            </summary>
            <param name="args">Command line args.</param>
        </member>
        <member name="M:Sitecore.Commerce.Engine.Program.BuildWebHost(System.String[])">
            <summary>
            Builds the web host.
            </summary>
            <param name="args">The arguments.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Hosting.IWebHost"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Engine.SitecoreServiceConfigurationExtensions">
            <summary>
            The sitecore services configuration xtensions.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Engine.SitecoreServiceConfigurationExtensions.ConfigureCommercePipelines(Sitecore.Framework.Configuration.ISitecoreServicesConfiguration)">
            <summary>
            The configure commerce pipelines.
            </summary>
            <param name="services">
            The sitecore services configuration.
            </param>
            <returns>
            The <see cref="T:Sitecore.Framework.Configuration.ISitecoreServicesConfiguration"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Engine.Startup">
            <summary>
            Defines the commerce engine startup.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Engine.Startup.#ctor(System.IServiceProvider,Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Engine.Startup"/> class.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <param name="hostEnv">The hosting environment.</param>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="P:Sitecore.Commerce.Engine.Startup.StartupEnvironment">
            <summary>
            Gets or sets the Initial Startup Environment. This will tell the Node how to behave
            This will be overloaded by the Environment stored in configuration.
            </summary>
            <value>
            The startup environment.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Engine.Startup.Configuration">
            <summary>
            Gets the configuration.
            </summary>
            <value>
            The configuration.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Engine.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configures the services.
            </summary>
            <param name="services">The services.</param>
        </member>
        <member name="M:Sitecore.Commerce.Engine.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Sitecore.Commerce.Core.IConfigureServiceApiPipeline,Sitecore.Commerce.Core.IStartNodePipeline,Sitecore.Commerce.Core.IConfigureOpsServiceApiPipeline,Sitecore.Commerce.Core.IStartEnvironmentPipeline,Microsoft.Extensions.Options.IOptions{Sitecore.Commerce.Core.Logging.LoggingSettings},Microsoft.Extensions.Options.IOptions{Sitecore.Commerce.Core.CertificatesSettings},Microsoft.Extensions.Options.IOptions{System.Collections.Generic.List{System.String}},Sitecore.Commerce.Plugin.SQL.GetDatabaseVersionCommand)">
            <summary>
            Configures the specified application.
            </summary>
            <param name="app">The application.</param>
            <param name="configureServiceApiPipeline">The context pipeline.</param>
            <param name="startNodePipeline">The start node pipeline.</param>
            <param name="configureOpsServiceApiPipeline">The context ops service API pipeline.</param>
            <param name="startEnvironmentPipeline">The start environment pipeline.</param>
            <param name="loggingSettings">The logging settings.</param>
            <param name="certificatesSettings">The certificates settings.</param>
            <param name="allowedOriginsOptions"></param>
            <param name="getDatabaseVersionCommand">Command to get DB version</param>
        </member>
        <member name="M:Sitecore.Commerce.Engine.Startup.GetSerilogLogLevel">
            <summary>
            Gets the serilog log level.
            </summary>
            <returns>A <see cref="T:Serilog.Events.LogEventLevel"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Engine.Startup.SetupDataProtection(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Setups the data protection storage and encryption protection type
            </summary>
            <param name="services">The services.</param>
        </member>
        <member name="M:Sitecore.Commerce.Engine.Startup.GetGlobalEnvironment(Sitecore.Commerce.Core.CommerceCommander)">
            <summary>
            Gets the global environment.
            </summary>
            <param name="serializer">The serializer.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.CommerceEnvironment"/></returns>
        </member>
    </members>
</doc>
